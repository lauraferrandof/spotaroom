{"version":3,"sources":["components/MenuItem/index.js","components/Menu/index.js","components/Logo/index.js","components/Header/index.js","components/Button/index.js","components/RoomItem/index.js","components/RoomList/index.js","components/Main/index.js","components/Loader/index.js","App.js","services/RoomService.js","serviceWorker.js","index.js"],"names":["MenuItem","_ref","content","react_default","a","createElement","className","react_router_dom","to","Menu","components_MenuItem","Component","Logo","Header","components_Logo","components_Menu","Button","buttonType","buttonStyles","children","handleBtnClick","type","onClick","RoomItem","room","this","props","photoUrls","title","pricePerMonth","currencySymbol","src","homecardHidpi","alt","components_Button","RoomList","rooms","map","ind","components_RoomItem","key","Main","components_RoomList","Loader","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","roomData","isFetching","_this2","fetch","then","response","json","data","results","homecards","setState","_this$state","components_Header","components_Loader","components_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.caf2eff5.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport \"./MenuItem.scss\";\n\nconst MenuItem = ({ content }) => (\n\t<li className=\"menu__item\">\n\t\t<Link to=\"/\" className=\"menu__link\">\n\t\t\t{content}\n\t\t</Link>\n\t</li>\n);\n\nMenuItem.propTypes = {\n\tcontent: PropTypes.string.isRequired\n};\n\nexport default MenuItem;\n","import React, { Component } from \"react\";\nimport \"./Menu.scss\";\nimport MenuItem from \"../MenuItem\";\n\nclass Menu extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<nav className=\"menu\">\n\t\t\t\t<ul className=\"menu__list\">\n\t\t\t\t\t<MenuItem content=\"The company\" />\n\t\t\t\t\t<span className=\"menu__divider\">-</span>\n\t\t\t\t\t<MenuItem content=\"How we work\" />\n\t\t\t\t\t<span className=\"menu__divider\">-</span>\n\t\t\t\t\t<MenuItem content=\"Contact us\" />\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t);\n\t}\n}\n\nexport default Menu;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Logo.scss\";\n\nconst Logo = () => (\n\t<Link to=\"/\" className=\"logo__link\">\n\t\t<div className=\"logo\">[ Spotaroom ]</div>\n\t</Link>\n);\n\nexport default Logo;\n","import React, { Component } from \"react\";\nimport \"./Header.scss\";\nimport Menu from \"../Menu\";\nimport Logo from \"../Logo\";\n\nclass Header extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<header className=\"app__header\">\n\t\t\t\t<Logo />\n\t\t\t\t<Menu />\n\t\t\t</header>\n\t\t);\n\t}\n}\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Button.scss\";\n\nconst Button = ({ buttonType, buttonStyles, children, handleBtnClick }) => {\n\treturn (\n\t\t<button className={buttonStyles} type={buttonType} onClick={handleBtnClick}>\n\t\t\t{children}\n\t\t</button>\n\t);\n};\n\nButton.propTypes = {\n\tbuttonType: PropTypes.string.isRequired,\n\tbuttonStyles: PropTypes.string.isRequired,\n\thandleBtnClick: PropTypes.func\n};\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport \"./RoomItem.scss\";\nimport Button from \"../Button\";\n\nclass RoomItem extends Component {\n\trender() {\n\t\tconst { room } = this.props;\n\t\tconst { photoUrls, title, pricePerMonth, currencySymbol } = room;\n\n\t\treturn (\n\t\t\t<li className=\"rooms__item\">\n\t\t\t\t<div className=\"room__image-wrapper\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName=\"room__image\"\n\t\t\t\t\t\tsrc={photoUrls.homecardHidpi}\n\t\t\t\t\t\talt=\"Room\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"room__content-wrapper\">\n\t\t\t\t\t<div className=\"room__details-wrapper\">\n\t\t\t\t\t\t<h2 className=\"room__description\">{title}</h2>\n\n\t\t\t\t\t\t<div className=\"room__price\">\n\t\t\t\t\t\t\t{pricePerMonth}\n\t\t\t\t\t\t\t{currencySymbol}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"room__buttons-wrapper\">\n\t\t\t\t\t\t<Link to=\"/\" className=\"btn__link\">\n\t\t\t\t\t\t\t<Button buttonType=\"button\" buttonStyles=\"btn btn--secondary\">\n\t\t\t\t\t\t\t\tMore details\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Link>\n\n\t\t\t\t\t\t<Link to=\"/\" className=\"btn__link\">\n\t\t\t\t\t\t\t<Button buttonType=\"button\" buttonStyles=\"btn btn--primary\">\n\t\t\t\t\t\t\t\tBook now!\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t);\n\t}\n}\n\nRoomItem.propTypes = {\n\troom: PropTypes.object.isRequired\n};\n\nexport default RoomItem;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./RoomList.scss\";\nimport RoomItem from \"../RoomItem\";\n\nclass RoomList extends Component {\n\trender() {\n\t\tconst { rooms } = this.props;\n\t\treturn (\n\t\t\t<section className=\"app__rooms\">\n\t\t\t\t<ul className=\"rooms__list\">\n\t\t\t\t\t{rooms.map((room, ind) => {\n\t\t\t\t\t\treturn <RoomItem key={ind} room={room} />;\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</section>\n\t\t);\n\t}\n}\n\nRoomList.propTypes = {\n\trooms: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired\n};\n\nexport default RoomList;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Main.scss\";\nimport RoomList from \"../RoomList\";\n\nclass Main extends Component {\n\trender() {\n\t\tconst { rooms } = this.props;\n\t\treturn (\n\t\t\t<main className=\"app__main\">\n\t\t\t\t<RoomList rooms={rooms} />\n\t\t\t</main>\n\t\t);\n\t}\n}\n\nMain.propTypes = {\n\trooms: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired\n};\n\nexport default Main;\n","import React from \"react\";\nimport \"./Loader.scss\";\n\nconst Loader = () => <div className=\"loader\">Loading...</div>;\n\nexport default Loader;\n","import React, { Component } from \"react\";\nimport { fetchRooms } from \"./services/RoomService\";\nimport \"./App.scss\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Loader from \"./components/Loader\";\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\troomData: [],\n\t\t\tisFetching: true\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfetchRooms().then(data => {\n\t\t\tconst results = data.homecards;\n\t\t\tthis.setState({\n\t\t\t\troomData: results,\n\t\t\t\tisFetching: false\n\t\t\t});\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { roomData, isFetching } = this.state;\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Header />\n\n\t\t\t\t{isFetching\n\t\t\t\t\t? <Loader />\n\t\t\t\t\t: <Main rooms={roomData} />\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const ENDPOINT = \"/api/homecards\";\n\nconst fetchRooms = () => fetch(ENDPOINT).then(response => response.json());\n\nexport { fetchRooms };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<HashRouter>\n\t\t<App />\n\t</HashRouter>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}